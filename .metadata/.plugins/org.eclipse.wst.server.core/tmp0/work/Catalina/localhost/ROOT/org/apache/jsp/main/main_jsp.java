/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-30 07:20:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>Main Page</h1>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"text\" name=\"query\" value=\"\" id=\"query\"/>\r\n");
      out.write("\t<!-- <button type=\"button\" onclick=\"search_go()\">네이버 검색</button>\t -->\r\n");
      out.write("\t<!-- <button type=\"button\" id=\"searchBtn\">네이버 검색</button>\t -->\r\n");
      out.write("\t\r\n");
      out.write("\t<select id=\"loc_mcd\">\r\n");
      out.write("\t\t<option value=\"101000\">서울 </option>\r\n");
      out.write("\t\t<option value=\"102000\">경기 </option>\r\n");
      out.write("\t\t<option value=\"108000\">인천 </option>\r\n");
      out.write("\t\t<option value=\"106000\">부산 </option>\r\n");
      out.write("\t\t<option value=\"104000\">대구 </option>\r\n");
      out.write("\t\t<option value=\"103000\">광주 </option>\r\n");
      out.write("\t\t<option value=\"105000\">대전 </option>\r\n");
      out.write("\t\t<option value=\"107000\">울산 </option>\r\n");
      out.write("\t\t<option value=\"118000\">세종 </option>\r\n");
      out.write("\t\t<option value=\"109000\">강원 </option>\r\n");
      out.write("\t\t<option value=\"110000\">경남 </option>\r\n");
      out.write("\t\t<option value=\"111000\">경북 </option>\r\n");
      out.write("\t\t<option value=\"112000\">전남 </option>\r\n");
      out.write("\t\t<option value=\"113000\">전북 </option>\r\n");
      out.write("\t\t<option value=\"115000\">충남 </option>\r\n");
      out.write("\t\t<option value=\"114000\">충북 </option>\r\n");
      out.write("\t\t<option value=\"116000\">제주 </option>\r\n");
      out.write("\t\t<option value=\"117000\">전국 </option>\r\n");
      out.write("\t\r\n");
      out.write("\t</select>\r\n");
      out.write("\t\r\n");
      out.write("\t<button type=\"button\" id=\"searchBtn\">사람인 검색</button>\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write(" \tvar btn = document.getElementById(\"searchBtn\");\r\n");
      out.write("\tbtn.onclick=function(event){\r\n");
      out.write("\t\tvar text = document.getElementById(\"query\").value;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//네이버 검색\r\n");
      out.write("\t\t//var url = \"https://search.naver.com/search.naver?sm=top_hty&fbm=1&ie=utf8&query=\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//사람인 검색\r\n");
      out.write("\t\tvar loc_mcd = document.getElementById(\"loc_mcd\");\r\n");
      out.write("\t\tloc_mcd = loc_mcd.options[loc_mcd.selectedIndex].value;\r\n");
      out.write("\t\t//console.log(loc_mcd);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar url = \"http://www.saramin.co.kr/zf_user/search?searchType=search&loc_mcd=\"+loc_mcd\r\n");
      out.write("\t\t\t\t+\"&cat_cd=404&company_cd=0%2C1%2C2%2C3%2C4%2C5%2C6%2C7%2C9%2C10&searchword=\"\r\n");
      out.write("\t\t\t\t+text+\"&panel_type=&search_optional_item=y&search_done=y&panel_count=y\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\tlocation.href=url+loc_mcd+text;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(url);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
